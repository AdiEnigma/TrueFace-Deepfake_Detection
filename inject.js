((function(){
 'use strict';
 if(window.__FE1_INJECT_INITIALIZED__)return;window.__FE1_INJECT_INITIALIZED__=true;
 const DEFAULT_CONFIG={WS_URL:'ws://localhost:8000/ws',RECONNECT_INTERVAL_MS:5000,DEBUG:true,FRAME_INTERVAL_MS:2000,JPEG_QUALITY:0.8,MAX_WIDTH:640};
 function getConfig(){const u=window.AUTH_OVERLAY_CONFIG||{};return Object.assign({},DEFAULT_CONFIG,u)}
 const state={ws:null,wsReady:false,reconnectTimer:0,queue:[],videoEl:null,frameCanvas:null,frameCtx:null,frameTimer:0,isStreaming:false,serverSessionId:null,container:null,statusDot:null,percentEl:null,scoreEl:null,emojiEl:null,connTextEl:null,ringFG:null,ringCircumference:100,currentPercent:0,animRAF:0,simTimer:0,observer:null,findTimer:0};
 function injectStyleOnce(){if(document.getElementById('gh-auth-overlay-style'))return;const s=document.createElement('style');s.id='gh-auth-overlay-style';s.textContent=`:root{--overlay-bg:rgba(255,255,255,0.15);--overlay-border:rgba(255,255,255,0.22);--overlay-shadow:0 8px 30px rgba(0,0,0,0.35);--text-primary:#0f172a;--text-secondary:#334155;--muted:rgba(0,0,0,0.35);--ring-color:#22c55e}@media (prefers-color-scheme: dark){:root{--overlay-bg:rgba(0,0,0,0.35);--overlay-border:rgba(255,255,255,0.12);--overlay-shadow:0 10px 35px rgba(0,0,0,0.6);--text-primary:#e5e7eb;--text-secondary:#9ca3af;--muted:rgba(255,255,255,0.35)}}.gh-auth-overlay{position:fixed;top:20px;right:20px;z-index:9999;width:168px;max-width:92vw;height:auto;max-height:120px;box-sizing:border-box;padding:10px 12px 12px 12px;background:var(--overlay-bg);border:1px solid var(--overlay-border);backdrop-filter:blur(8px);-webkit-backdrop-filter:blur(8px);border-radius:12px;box-shadow:var(--overlay-shadow);color:var(--text-primary);pointer-events:none;animation:gh-fade-in 220ms ease-out}.gh-auth-overlay *{box-sizing:border-box}.gh-row{display:grid;grid-template-columns:auto 1fr;grid-column-gap:10px;align-items:center}.gh-status-dot{position:absolute;top:8px;right:8px;width:10px;height:10px;border-radius:999px;background:#ef4444;box-shadow:0 0 0 2px rgba(0,0,0,0.08)}.gh-status-dot.connected{background:#22c55e}.gh-status-dot.disconnected{background:#ef4444}.gh-meter{position:relative;width:72px;height:72px}.gh-ring{width:72px;height:72px;display:block;transform:rotate(-90deg)}.gh-ring circle.bg{stroke:rgba(128,128,128,0.25)}.gh-ring circle.fg{stroke:var(--ring-color);transition:stroke 200ms ease}.gh-percent{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:14px;font-weight:600;color:var(--text-primary)}.gh-text{min-width:0}.gh-label{font-size:12px;color:var(--text-secondary);margin-bottom:2px}.gh-value{font-size:14px;font-weight:600;color:var(--text-primary)}.gh-emoji{margin-left:4px}.gh-conn{font-size:11px;color:var(--text-secondary);margin-top:2px}.gh-auth-overlay.reconnecting .gh-status-dot{animation:gh-pulse 900ms ease-in-out infinite}@keyframes gh-pulse{0%{box-shadow:0 0 0 0 rgba(34,197,94,0.35)}70%{box-shadow:0 0 0 8px rgba(34,197,94,0)}100%{box-shadow:0 0 0 0 rgba(34,197,94,0)}}@keyframes gh-fade-in{from{opacity:0;transform:translateY(-4px)}to{opacity:1;transform:translateY(0)}}`;document.head.appendChild(s)}
 function createOverlay(){if(document.getElementById('gh-auth-overlay'))return;const wrap=document.createElement('div');wrap.id='gh-auth-overlay';wrap.className='gh-auth-overlay';wrap.setAttribute('role','status');wrap.setAttribute('aria-live','polite');wrap.style.pointerEvents='none';wrap.innerHTML='\n      <span class="gh-status-dot disconnected" aria-label="WebSocket disconnected"></span>\n      <div class="gh-row">\n        <div class="gh-meter">\n          <svg class="gh-ring" viewBox="0 0 36 36" aria-hidden="true">\n            <circle class="bg" cx="18" cy="18" r="16" fill="none" stroke-width="4"></circle>\n            <circle class="fg" cx="18" cy="18" r="16" fill="none" stroke-width="4" stroke-dasharray="100" stroke-dashoffset="100" stroke-linecap="round"></circle>\n          </svg>\n          <div class="gh-percent">0%</div>\n        </div>\n        <div class="gh-text">\n          <div class="gh-label">Authenticity</div>\n          <div class="gh-value"><span class="gh-score">0</span>% <span class="gh-emoji">❌</span></div>\n          <div class="gh-conn">Disconnected</div>\n        </div>\n      </div>\n    ';document.body.appendChild(wrap);cacheOverlayRefs()}
 function cacheOverlayRefs(){const c=document.getElementById('gh-auth-overlay');if(!c)return;state.container=c;state.statusDot=c.querySelector('.gh-status-dot');state.percentEl=c.querySelector('.gh-percent');state.scoreEl=c.querySelector('.gh-score');state.emojiEl=c.querySelector('.gh-emoji');state.connTextEl=c.querySelector('.gh-conn');state.ringFG=c.querySelector('.gh-ring circle.fg');const r=parseFloat(state.ringFG.getAttribute('r'))||16;const C=2*Math.PI*r;state.ringCircumference=C;state.ringFG.setAttribute('stroke-dasharray',String(C));state.ringFG.setAttribute('stroke-dashoffset',String(C))}
 function setRingColorByScore(score){let color='#ef4444';if(score>=80)color='#22c55e';else if(score>=50)color='#f59e0b';if(state.container)state.container.style.setProperty('--ring-color',color)}
 function updateStatus(mode){const dot=state.statusDot;const conn=state.connTextEl;const cont=state.container;if(!dot||!conn||!cont)return;cont.classList.toggle('reconnecting',mode==='reconnecting');dot.classList.remove('connected','disconnected');if(mode==='connected'){dot.classList.add('connected');conn.textContent='Connected'}else if(mode==='reconnecting'){dot.classList.add('disconnected');conn.textContent='Reconnecting…'}else{dot.classList.add('disconnected');conn.textContent='Disconnected'}}
 function animateRingTo(target){const fg=state.ringFG;if(!fg||!state.ringCircumference)return;const C=state.ringCircumference;const start=state.currentPercent||0;const end=Math.max(0,Math.min(100,target));const duration=300;const startTs=performance.now();if(state.animRAF)cancelAnimationFrame(state.animRAF);function ease(t){return t<0.5?2*t*t:-1+(4-2*t)*t}function step(now){const t=Math.max(0,Math.min(1,(now-startTs)/duration));const eased=ease(t);const val=start+(end-start)*eased;const offset=C*(1-val/100);fg.setAttribute('stroke-dashoffset',String(offset));state.currentPercent=val;if(t<1){state.animRAF=requestAnimationFrame(step)}}state.animRAF=requestAnimationFrame(step)}
 function applyScore(data){const s=Number(data&&data.authenticity)||0;const score=Math.max(0,Math.min(100,s));setRingColorByScore(score);if(state.scoreEl)state.scoreEl.textContent=String(Math.round(score));if(state.percentEl)state.percentEl.textContent=`${Math.round(score)}%`;if(state.emojiEl){const conf=(data&&data.confidence||'').toLowerCase();state.emojiEl.textContent=conf==='high'?'✅':conf==='medium'?'⚠️':score>=80?'✅':score>=50?'⚠️':'❌'}animateRingTo(score)}
 function handleVideoAnalysisResult(results){if(!results)return;const df=Number(results.overall_score)||0;const conf=Number(results.confidence)||0;const authenticity=Math.max(0,Math.min(100,Math.round((1-df)*100)));const confLabel=conf>=0.8?'high':conf>=0.5?'medium':'low';applyScore({authenticity,confidence:confLabel})}
 function connectWs(){const cfg=getConfig();try{if(state.ws){try{state.ws.close()}catch(e){}state.ws=null}}catch(e){}clearTimeout(state.reconnectTimer);updateStatus('reconnecting');let ws;try{ws=new WebSocket(cfg.WS_URL)}catch(e){maybeStartSimulation();scheduleReconnect();return}state.ws=ws;ws.onopen=function(){state.wsReady=true;updateStatus('connected');stopSimulation();flushQueue()};ws.onmessage=function(ev){try{const msg=JSON.parse(ev.data);if(!msg||typeof msg!=='object')return;const t=msg.type;if(t==='connection_established'){updateStatus('connected')}else if(t==='stream_started'){state.isStreaming=true;updateStatus('connected')}else if(t==='stream_stopped'){state.isStreaming=false}else if(t==='video_analysis_result'&&msg.results){handleVideoAnalysisResult(msg.results)}else if(t==='audio_analysis_result'&&msg.results){}else if(typeof msg.authenticity!=='undefined'){applyScore(msg)}}catch(e){}};ws.onclose=function(){state.wsReady=false;updateStatus('reconnecting');state.isStreaming=false;maybeStartSimulation();scheduleReconnect()};ws.onerror=function(){}} 
 function scheduleReconnect(){const cfg=getConfig();clearTimeout(state.reconnectTimer);state.reconnectTimer=setTimeout(function(){connectWs()},cfg.RECONNECT_INTERVAL_MS)}
 function maybeStartSimulation(){const cfg=getConfig();if(!cfg.DEBUG||state.simTimer)return;let val=Math.floor(Math.random()*41)+30;let dir=1;state.simTimer=setInterval(function(){val+=dir*(Math.random()*8);if(val>=98)dir=-1;if(val<=5)dir=1;val=Math.max(0,Math.min(100,val));const confidence=val>=80?'high':val>=50?'medium':'low';applyScore({authenticity:Math.round(val),confidence})},1200);updateStatus('reconnecting')}
 function stopSimulation(){if(state.simTimer){clearInterval(state.simTimer);state.simTimer=0}}
 function send(obj){const data=JSON.stringify(obj);if(state.wsReady&&state.ws&&state.ws.readyState===1){try{state.ws.send(data)}catch(e){}}else{state.queue.push(data);if(state.queue.length>20)state.queue.shift()}}
 function flushQueue(){if(!state.queue.length)return;if(state.wsReady&&state.ws&&state.ws.readyState===1){for(const data of state.queue){try{state.ws.send(data)}catch(e){}}state.queue=[]}}
 function area(el){const r=el.getBoundingClientRect();return Math.max(0,r.width)*Math.max(0,r.height)}
 function visible(el){const r=el.getBoundingClientRect();if(r.width<=0||r.height<=0)return false;const cs=window.getComputedStyle(el);return cs.visibility!=='hidden'&&cs.display!=='none'}
 function getCandidateVideos(){const vids=Array.from(document.querySelectorAll('video'));const cand=vids.filter(function(v){try{return v&&visible(v)&&(v.readyState>=2||v.videoWidth>0)}catch(e){return false}});cand.sort(function(a,b){return area(b)-area(a)});return cand}
 function findRemoteVideo(){const list=getCandidateVideos();if(!list.length)return null;return list[0]}
 function findAndStart(){const v=findRemoteVideo();if(!v){state.findTimer=setTimeout(findAndStart,1000);return}if(state.videoEl!==v){state.videoEl=v;startFrameLoop()}}
 function ensureCanvas(){if(state.frameCanvas&&state.frameCtx)return;state.frameCanvas=document.createElement('canvas');state.frameCtx=state.frameCanvas.getContext('2d',{willReadFrequently:true})}
 function startFrameLoop(){const cfg=getConfig();ensureCanvas();if(!state.wsReady){return}if(!state.isStreaming){send({type:'start_stream',config:{video_enabled:true,audio_enabled:false,quality:'medium',detection_sensitivity:'medium'}})}clearInterval(state.frameTimer);state.frameTimer=setInterval(captureAndSendFrame,Math.max(500,cfg.FRAME_INTERVAL_MS||2000))}
 function stopFrameLoop(){clearInterval(state.frameTimer);state.frameTimer=0}
 function captureAndSendFrame(){if(!state.wsReady||!state.videoEl)return;const v=state.videoEl;if(!v.videoWidth||!v.videoHeight)return;const cfg=getConfig();const maxW=cfg.MAX_WIDTH||640;const scale=Math.min(1,maxW/Math.max(1,v.videoWidth));const w=Math.max(1,Math.round(v.videoWidth*scale));const h=Math.max(1,Math.round(v.videoHeight*scale));if(!state.frameCanvas)ensureCanvas();if(state.frameCanvas.width!==w||state.frameCanvas.height!==h){state.frameCanvas.width=w;state.frameCanvas.height=h}const ctx=state.frameCtx;try{ctx.drawImage(v,0,0,w,h)}catch(e){return}let dataUrl;try{dataUrl=state.frameCanvas.toDataURL('image/jpeg',cfg.JPEG_QUALITY||0.8)}catch(e){return}const base64=(dataUrl.split(',')[1]||'');send({type:'video_frame',data:base64,timestamp:new Date().toISOString()})}
 function installMutationObserver(){if(state.observer)return;const obs=new MutationObserver(function(){if(!document.getElementById('gh-auth-overlay')){createOverlay()}if(!state.videoEl||!document.contains(state.videoEl)){findAndStart()}});obs.observe(document.documentElement||document.body,{childList:true,subtree:true});state.observer=obs}
 function init(){injectStyleOnce();createOverlay();connectWs();findAndStart();installMutationObserver()}
 function waitReadyAndStart(){if(document.readyState==='complete'||document.readyState==='interactive'){setTimeout(init,300)}else{window.addEventListener('load',function(){setTimeout(init,300)},{once:true})}}
 window.addEventListener('beforeunload',function(){try{send({type:'stop_stream'})}catch(e){};stopFrameLoop();try{state.ws&&state.ws.close()}catch(e){}})
 waitReadyAndStart()
})());